{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the virtual machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the virtual machine."
            }
        },
        "prefixLabel": {
            "type": "string",
            "metadata": {
                "description": "A string that will be used as a prefix for the virtual machine name and the DNS prefix for the public IP. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
            }
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "[concat(parameters('prefixLabel'), 'DC01')]",
            "metadata": {
                "description": "The name of the virtual machine that will be configured as a domain controller."
            }
        },
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "allowedValues": [
                "Standard_B1s",
                "Standard_B1ms",
                "Standard_B2s",
                "Standard_A1_v2",
                "Standard_B2ms",
                "Standard_A2_v2",
                "Standard_D2_v3"
            ],
            "metadata": {
                "description": "Size of the Virtual Machine."
            }
        },
        "vpnType": {
            "type": "string",
            "defaultValue": "RouteBased",
            "allowedValues": [
                "RouteBased",
                "PolicyBased"
            ],
            "metadata": {
                "description": "Route based (Dynamic Gateway) or Policy based (Static Gateway)"
            }
        },
        "localGatewayName": {
            "type": "string",
            "defaultValue": "localgateway",
            "metadata": {
                "description": "Arbitrary name for gateway resource representing your local/on-premise gateway"
            }
        },
        "localGatewayIpAddress": {
            "type": "string",
            "metadata": {
                "description": "Public IP of your local/on-premise gateway"
            }
        },
        "localGatewayAddressPrefix": {
            "type": "array",
            "metadata": {
                "description": "CIDR block representing the address space of your local/on-premise network's Subnet"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "azvnet",
            "metadata": {
                "description": "Arbitrary name for the Azure virtual network"
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.5.0.0/16",
            "metadata": {
                "description": "CIDR block representing the address space of the Azure virtual network"
            }
        },
        "vnetVmSubnetName": {
            "type": "string",
            "defaultValue": "azvnetsubnet01",
            "metadata": {
                "description": "Arbitrary name for the Azure virtual network subnet"
            }
        },
        "vnetVmSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.5.1.0/24",
            "metadata": {
                "description": "CIDR block for VM subnet, subset of the Azure virtual network Address Prefix address space"
            }
        },
        "vnetGatewayName": {
            "type": "string",
            "defaultValue": "azvnetgateway",
            "metadata": {
                "description": "Arbitrary name for the new Azure gateway"
            }
        },
        "vnetGatewayConnectionName": {
            "type": "string",
            "defaultValue": "azvnetgatewayconnection",
            "metadata": {
                "description": "Arbitrary name for the connection between the Azure virtual network and the local/on-premise network"
            }
        },
        "vnetGatewaySubnetPrefix": {
            "type": "string",
            "defaultValue": "10.5.200.0/29",
            "metadata": {
                "description": "CIDR block for gateway subnet, subset of the Azure virtual network Address Prefix address space"
            }
        },
        "vnetGatewayPublicIpAllocation": {
            "type": "string",
            "defaultValue": "Dynamic",
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "metadata": {
                "description": "Allocation method for the Azure virtual network Gateway Public IP, it can be dynamic or static."
            }
        },
        "vnetGatewayPublicIpName": {
            "type": "string",
            "defaultValue": "[concat(parameters('vnetGatewayName'), '-publicip')]",
            "metadata": {
                "description": "Arbitrary name for public IP used for the Azure virtual network gateway"
            }
        },
        "gatewaySku": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard",
                "HighPerformance"
            ],
            "metadata": {
                "description": "The Sku of the Gateway. This must be one of Basic, Standard or HighPerformance."
            }
        },
        "sharedKey": {
            "type": "securestring",
            "metadata": {
                "description": "Shared key (PSK) for IPSec tunnel"
            }
        }
    },
    "variables": {
        "gatewaySubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('vnetName'),'GatewaySubnet')]",
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), '-', parameters('virtualMachineName'), '-storage')]",
        "vNicName": "[concat(parameters('virtualMachineName'), '-vnic')]",
        "vmSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('vnetName'), parameters('vnetVmSubnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "name": "[parameters('localGatewayName')]",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": "[parameters('localGatewayAddressPrefix')]"
                },
                "gatewayIpAddress": "[parameters('localGatewayIpAddress')]"
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "name": "[parameters('vnetGatewayConnectionName')]",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('vnetGatewayName'))]",
                "[concat('Microsoft.Network/localNetworkGateways/', parameters('localGatewayName'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vnetGatewayName'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localGatewayName'))]"
                },
                "connectionType": "IPsec",
                "routingWeight": 10,
                "sharedKey": "[parameters('sharedKey')]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetName')]",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('vnetVmSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('vnetVmSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[parameters('vnetGatewaySubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(createarray(parameters('vnetGatewayName'), parameters('virtualMachineName')), '-publicip')]",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[parameters('vnetGatewayPublicIpAllocation')]",
                "dnsSettings": {
                    "domainNameLabel": "[if(equals(copyIndex(),'2'), parameters('prefixLabel'), json('null'))]"
                }
            },
            "copy": {
                "name": "publicipcopy",
                "count": 2,
                "mode": "Serial",
                "batchSize": 1
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[parameters('vnetGatewayName')]",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('vnetGatewayPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('gatewaySubnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vnetGatewayName'), '-publicip'))]"
                            }
                        },
                        "name": "vnetGatewayConfig"
                    }
                ],
                "sku": {
                    "name": "[parameters('gatewaySku')]",
                    "tier": "[parameters('gatewaySku')]"
                },
                "gatewayType": "Vpn",
                "vpnType": "[parameters('vpnType')]",
                "enableBgp": "false"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vNicName')]",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('virtualMachineName'), '-publicip'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('virtualMachineName'), '-publicip'))]"
                            },
                            "subnet": {
                                "id": "[variables('vmSubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2018-07-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('virtualMachineName')]",
            "apiVersion": "2018-10-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('vNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vNicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            }
        }
    ],
    "outputs": {}
}